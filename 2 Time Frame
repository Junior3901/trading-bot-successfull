//+------------------------------------------------------------------+
//|                                                       Projectj50 |
//|                   Copyright 2023, Your Name                        |
//|                             https://www.yourwebsite.com            |
//+------------------------------------------------------------------+
#property copyright "Copyright 2023, Your Name"
#property link      "https://www.yourwebsite.com"
#property version   "1.00"
#property strict

// define input parameters
extern double lotsize = 0.5;
extern int stoploss = 50;
extern int takeprofit = 100;
extern double sar_step = 0.02;
extern double sar_maximum = 0.2;
extern double adx_threshold = 25;

// define variables
int buy_order;
int sell_order;

void OnTick()
{
    double ema8_30 = iMA(NULL, PERIOD_M30, 8, 0, MODE_EMA, PRICE_CLOSE, 0);
    double ema14_30 = iMA(NULL, PERIOD_M30, 14, 0, MODE_EMA, PRICE_CLOSE, 0);
    double ema21_30 = iMA(NULL, PERIOD_M30, 21, 0, MODE_EMA, PRICE_CLOSE, 0);
    double adx_30 = iADX(NULL, PERIOD_M30, 14, PRICE_CLOSE, MODE_MAIN, 0);
    double di_minus_30 = iADX(NULL, PERIOD_M30, 14, PRICE_CLOSE, MODE_MINUSDI, 0);
    double di_plus_30 = iADX(NULL, PERIOD_M30, 14, PRICE_CLOSE, MODE_PLUSDI, 0);
    double sar_30 = iSAR(NULL, PERIOD_M30, sar_step, sar_maximum, 0);
    
    double ema8_5 = iMA(NULL, PERIOD_M15, 8, 0, MODE_EMA, PRICE_CLOSE, 0);
    double ema14_5 = iMA(NULL, PERIOD_M15, 14, 0, MODE_EMA, PRICE_CLOSE, 0);
    double ema21_5 = iMA(NULL, PERIOD_M15, 21, 0, MODE_EMA, PRICE_CLOSE, 0);
    double adx_5 = iADX(NULL, PERIOD_M15, 14, PRICE_CLOSE, MODE_MAIN, 0);
    double di_minus_5 = iADX(NULL, PERIOD_M15, 14, PRICE_CLOSE, MODE_MINUSDI, 0);
    double di_plus_5 = iADX(NULL, PERIOD_M15, 14, PRICE_CLOSE, MODE_PLUSDI, 0);
    double sar_5 = iSAR(NULL, PERIOD_M15, sar_step, sar_maximum, 0);

    // check for buy conditions
    if (ema8_30 > ema14_30 && ema14_30 > ema21_30 && adx_30 > adx_threshold && di_minus_30 < adx_threshold && Bid > sar_30)
    {
        // check if there is no existing buy order
        if (buy_order == 0)
        {
            // open buy order
            Alert(Symbol());
            buy_order = OrderSend(Symbol(), OP_BUY, lotsize, Ask, 0, 0, 0, "Buy", 0, 0, Blue);
        }
    }
    if (ema8_5 < ema14_5 || ema14_5 < ema21_5 || adx_5 < adx_threshold || di_minus_5 > adx_threshold || Bid < sar_5)
    {
        // check if there is an existing buy order
        if (buy_order != 0)
        {
            // close buy order
            OrderClose(buy_order, lotsize, Bid, 0, Green);
            buy_order = 0;
        }
    }

    // check for sell conditions
    if (ema8_30 < ema14_30 && ema14_30 < ema21_30 && adx_30 > adx_threshold && di_plus_30 < adx_threshold && Bid < sar_30)
    {
        // check if there is no existing sell order
        if (sell_order == 0)
        {
            // open sell order
            sell_order = OrderSend(Symbol(), OP_SELL, lotsize, Bid, 0, 0, 0, "Sell", 0, 0, Red);
        }
    }
    if (ema8_5 > ema14_5 || ema14_5 > ema21_5 || adx_5 < adx_threshold || di_plus_5 > adx_threshold || Bid > sar_5)
    {
        // check if there is an existing sell order
        if (sell_order != 0)
        {
            // close buy order
            OrderClose(sell_order, lotsize, Bid, 0, Yellow);
            sell_order = 0;
        }
    }
    
    //Alert(MarketInfo(NULL, MODE_MAXLOT));
    
}
